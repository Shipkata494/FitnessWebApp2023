@model MineFoodsQueryModel
@inject IGymUserService GymUserService;
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@{
    string totalCalories = Model.Foods.Sum(f=>f.TotalCalories).ToString("f2");
    double caloriesMaintance = await GymUserService.CaloriesForMaintanceAsync(User.GetId()!);
    string remining = (caloriesMaintance - Double.Parse(totalCalories)).ToString("f2");
}
<form method="get">
    <div class="row">
        <div class="form-group">
            <label asp-for="Day" class="control-label col-md-2"></label>
            <div class="col-md-10">
                <input asp-for="Day" class="form-control" />
                <span asp-validation-for="Day" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>
@if (Model.Foods.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Goal</th>
                <th scope="col">Food</th>
                <th scope="col">Remining</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope="row">@caloriesMaintance</th>
                <td>@totalCalories</td>
                <td>@remining</td>
            </tr>            
        </tbody>
    </table>
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                @foreach (var foods in Model.Foods)
                {
                    <partial name="_MineFoodsPartial" model="@foods" />
                }               
            </div>
            <div class="col-md-4">
                <div class="small">
                    <canvas id="pieChart" width="200" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
    <script>
        var ctx = document.getElementById('pieChart').getContext('2d');
        var data = {
            labels: ['Protein', 'Fat', 'Carbs'],
            datasets: [{
                data: [@Model.Foods.Sum(x=>x.Protein), @Model.Foods.Sum(x=>x.Fat), @Model.Foods.Sum(x => x.Carbs)],
                backgroundColor: ['green', 'red', 'orange','grey'],
            }]
        };

        var pieChart = new Chart(ctx, {
            type: 'pie',
            data: data,
        });
    </script>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Goal</th>
                <th scope="col">Food</th>
                <th scope="col">Remining</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope="row">@caloriesMaintance</th>
                <td>@totalCalories</td>
                <td>@remining</td>
            </tr>
        </tbody>
    </table>
    <h1>You do not eat any food on this day!</h1>
}
